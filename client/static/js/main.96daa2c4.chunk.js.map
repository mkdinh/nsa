{"version":3,"sources":["components/shared/Loader.module.less","components/UserAlert.module.less","components/UserInfo.module.less","components/UserCard.module.less","components/UserItem.module.less","components/UserList.module.less","components/UserMap.module.less","views/Home.module.less","components/shared/Loader.js","components/UserAlert.js","components/UserInfo.js","components/UserCard.js","components/UserItem.js","components/UserList.js","components/UserMap.js","components/shared/Page.js","api/requests/UserRequest.js","api/requests/BaseRequest.js","api/AxiosContext.js","api/RequestProxy.js","api/index.js","api/ApiClient.js","views/Home.js","views/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Loader","props","show","name","UserAlert","useState","opacity","style","setStyle","user","message","firstName","useEffect","location","setTimeout","type","Text","Typography","UserInfo","field","displayName","data","displayText","replace","trim","level","Meta","Card","bodyStyle","paddingBottom","UserCard","isExpand","setIsExpand","title","fullName","description","appVersion","avatar","shape","size","src","profilePhotoUrl","meta","bio","display","id","onClick","CaretUpOutlined","CaretDownOutlined","UserListItem","Item","padding","UserList","isVisible","onClose","onOpen","users","PlusOutlined","visible","loading","isLoading","dataSource","renderItem","onItemClick","L","Icon","Default","imagePath","UserMap","Incoming","coordinate","setCoordinate","zoom","setZoom","lat","lng","Map","flex","center","TileLayer","url","attribution","Marker","position","UserRequest","config","options","this","get","response","endpoint","context","proxy","evaluateEndpoint","post","put","delete","substr","LocalContext","requestOptions","withCredentials","axios","mergeOptions","DevelopmentRequestProxy","protocol","hostname","port","apiConfig","requestConfig","AxiosContext","RequestProxy","Content","Layout","Home","setUsers","currentUser","setCurrentUser","setIsLoading","setIsVisible","isReady","setIsReady","a","apiClient","getUsers","getUser","item","React","didRender","state","setState","PureComponent","App","className","Boolean","window","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.96daa2c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page-loader\":\"src-components-shared-Loader-module__page-loader--2Ro1z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user-alert\":\"src-components-UserAlert-module__user-alert--2icHG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user-info\":\"src-components-UserInfo-module__user-info--BSkhI\",\"user-info-field\":\"src-components-UserInfo-module__user-info-field--CG1Td\",\"user-info-data\":\"src-components-UserInfo-module__user-info-data--v1dd7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user-card\":\"src-components-UserCard-module__user-card--2eONo\",\"user-app-version\":\"src-components-UserCard-module__user-app-version--3aUtS\",\"user-content\":\"src-components-UserCard-module__user-content--1W7sp\",\"user-card-info\":\"src-components-UserCard-module__user-card-info--10xNK\",\"user-bio\":\"src-components-UserCard-module__user-bio--2KDqz\",\"mobile-expand-button\":\"src-components-UserCard-module__mobile-expand-button--2Nq7n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user-item\":\"src-components-UserItem-module__user-item--2FUga\",\"user-name\":\"src-components-UserItem-module__user-name--3Vg2Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trigger-button\":\"src-components-UserList-module__trigger-button--1byHI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user-map-container\":\"src-components-UserMap-module__user-map-container--17zvq\",\"leaflet-container\":\"src-components-UserMap-module__leaflet-container--171Gm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home-view\":\"src-views-Home-module__home-view--3VmyT\"};","import React from 'react';\nimport Loading from 'react-loading-spinkit';\nimport './Loader.module.less';\n\nconst Loader = props => (\n  <div styleName=\"page-loader\">\n    <Loading show={props.show} name=\"line-scale-pulse-out-rapid\" />;\n  </div>\n);\n\nexport default Loader;","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Alert } from \"antd\";\nimport \"./UserAlert.module.less\";\n\nfunction UserAlert(props) {\n  const [style, setStyle] = useState({ opacity: 0 });\n  const { user } = props;\n\n  const message = `${user.firstName} is off the grid!`;\n\n  useEffect(() => {\n    setStyle({ opacity: user.location ? 0 : 1 });\n\n    if (!user.location) {\n      setTimeout(() => {\n        setStyle({ opacity: 0 });\n      }, 3000);\n    }\n  }, [user]);\n\n  return (\n    <Alert\n      style={style}\n      styleName=\"user-alert\"\n      message={message}\n      type=\"error\"\n    />\n  );\n}\n\nUserAlert.propTypes = {\n  user: PropTypes.object,\n};\n\nexport default UserAlert;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Typography } from \"antd\";\nimport \"./UserInfo.module.less\";\n\nconst { Text } = Typography;\n\nfunction UserInfo(props) {\n  const { user, field, displayName } = props;\n  const data = user ? user[field] : null;\n  const displayText = (displayName || field || \"\")\n    .replace(/([A-Z])/g, \" $1\")\n    .trim();\n\n  return user ? (\n    <div styleName=\"user-info\">\n      <Text styleName=\"user-info-field\" level={4}>\n        {displayText}\n      </Text>\n      <Text styleName=\"user-info-data\">{data}</Text>\n    </div>\n  ) : null;\n}\n\nUserInfo.propTypes = {\n  user: PropTypes.object,\n  field: PropTypes.string,\n  displayName: PropTypes.string,\n};\n\nexport default UserInfo;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Avatar, Typography } from \"antd\";\nimport { CaretUpOutlined, CaretDownOutlined } from \"@ant-design/icons\";\n\nimport UserInfo from \"@components/UserInfo\";\nimport \"./UserCard.module.less\";\n\nconst { Text } = Typography;\nconst { Meta } = Card;\n\nfunction UserCard(props) {\n  const [isExpand, setIsExpand] = useState(true);\n  const { user } = props;\n\n  function toggleExpand() {\n    setIsExpand(!isExpand);\n  }\n\n  return (\n    <Card bodyStyle={bodyStyle} styleName=\"user-card\">\n      <Meta\n        title={<Text>{user.fullName}</Text>}\n        description={\n          <Text styleName=\"user-app-version\">{user.appVersion}</Text>\n        }\n        avatar={\n          <Avatar shape=\"square\" size=\"large\" src={user.profilePhotoUrl} />\n        }\n      />\n      {isExpand && (\n        <div styleName=\"user-content\">\n          <Text styleName=\"user-bio\">{user.meta.bio}</Text>\n          <div styleName=\"user-card-info\">\n            <UserInfo user={user} field=\"email\" />\n            <UserInfo user={user} field=\"gender\" />\n            <UserInfo user={user.location} field=\"company\" />\n            <UserInfo\n              user={user.location}\n              field=\"countryName\"\n              display=\"country\"\n            />\n            <UserInfo user={user.meta} field=\"address\" />\n            <UserInfo user={user.meta} field=\"ipAddress\" />\n          </div>\n        </div>\n      )}\n      <span\n        id=\"mobile-expand-button\"\n        onClick={toggleExpand}\n        styleName=\"mobile-expand-button\"\n      >\n        {isExpand ? <CaretUpOutlined /> : <CaretDownOutlined />}\n      </span>\n    </Card>\n  );\n}\n\nUserCard.propTypes = {\n  user: PropTypes.object,\n};\n\nconst bodyStyle = {\n  paddingBottom: 0,\n};\n\nexport default UserCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List, Avatar } from \"antd\";\nimport \"./UserItem.module.less\";\n\nfunction UserListItem(props) {\n  const { user } = props;\n\n  function onClick() {\n    props.onClick(user);\n  }\n\n  return (\n    <List.Item onClick={onClick} styleName=\"user-item\">\n      <List.Item.Meta\n        avatar={<Avatar src={user.profilePhotoUrl} />}\n        title={<span styleName=\"user-name\">{user.fullName}</span>}\n        description={<span>{user.appVersion}</span>}\n      />\n    </List.Item>\n  );\n}\n\nUserListItem.propTypes = {\n  onClick: PropTypes.func,\n  user: PropTypes.object,\n};\n\nexport default UserListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { List, Drawer, Button } from \"antd\";\n\nimport UserListItem from \"@components/UserItem\";\nimport \"./UserList.module.less\";\n\nfunction UserList(props) {\n  const { isVisible, onClose, onOpen, users } = props;\n  return (\n    <>\n      <div styleName=\"trigger-button\">\n        <Button size=\"large\" type=\"danger\" shape=\"circle\" onClick={onOpen}>\n          <PlusOutlined />\n        </Button>\n      </div>\n\n      <Drawer onClose={onClose} visible={isVisible} bodyStyle={bodyStyle}>\n        <List\n          loading={props.isLoading}\n          dataSource={users}\n          renderItem={(user) => (\n            <UserListItem onClick={props.onItemClick} user={user} />\n          )}\n        />\n      </Drawer>\n    </>\n  );\n}\n\nUserList.propTypes = {\n  users: PropTypes.array,\n  onOpen: PropTypes.func,\n  onClose: PropTypes.func,\n  onItemClick: PropTypes.func,\n  isLoading: PropTypes.bool,\n};\n\nconst bodyStyle = {\n  padding: 0,\n};\n\nexport default UserList;\n","import React, { useState, useEffect } from \"react\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport PropTypes from \"prop-types\";\nimport \"./UserMap.module.less\";\nimport L from \"leaflet\";\n\nL.Icon.Default.imagePath = \"/images\";\n\nfunction UserMap(props) {\n  const [coordinate, setCoordinate] = useState([35.7596, -79.0193]);\n  const [zoom, setZoom] = useState(16);\n\n  useEffect(() => {\n    if (props.location) {\n      setCoordinate([props.location.lat, props.location.lng]);\n      setZoom(16);\n    } else {\n      setZoom(10);\n    }\n  }, [props.location]);\n\n  return (\n    <div styleName=\"user-map-container\">\n      <Map style={{ flex: 1 }} center={coordinate} zoom={zoom}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        <Marker position={coordinate} />\n      </Map>\n    </div>\n  );\n}\n\nUserMap.propTypes = {\n  location: PropTypes.object,\n};\n\nexport default UserMap;\n","import React, { PureComponent } from \"react\";\nimport Loader from \"./Loader\";\n\nexport default (Incoming) => {\n  class PageComponent extends PureComponent {\n    state = {\n      isLoading: true,\n      display: \"none\",\n    };\n\n    didRender = () => {\n      setTimeout(() => {\n        this.setState({\n          isLoading: false,\n          display: \"block\",\n        });\n      }, 750);\n    };\n\n    render() {\n      const { isLoading, display } = this.state;\n      return (\n        <div>\n          {isLoading ? <Loader show={isLoading} /> : null}\n          <div style={{ display }}>\n            <Incoming didRender={this.didRender} />\n          </div>\n        </div>\n      );\n    }\n  }\n\n  return PageComponent;\n};\n","import BaseRequest from \"./BaseRequest\";\n\nexport default class UserRequest extends BaseRequest {\n  constructor(config) {\n    super(config, (options) => {\n      const baseUri = `/users`;\n      return options.id ? `${baseUri}/${options.id}` : baseUri;\n    });\n  }\n\n  async getUsers() {\n    const response = await this.get({});\n    return response.data;\n  }\n\n  async getUser(id) {\n    const response = await this.get({ id });\n    return response.data;\n  }\n}\n","export default class BaseRequest {\n    constructor(config, endpoint) {\n      this.context = config.context;\n      this.proxy = config.proxy;\n      this.endpoint = endpoint;\n    }\n  \n    get(options) {\n      return this.context.get(this.evaluateEndpoint(options), options);\n    }\n  \n    post(options) {\n      return this.context.post(this.evaluateEndpoint(options), options);\n    }\n  \n    put(options) {\n      return this.context.put(this.evaluateEndpoint(options), options);\n    }\n  \n    delete(options) {\n      return this.context.delete(this.evaluateEndpoint(options), options);\n    }\n  \n    evaluateEndpoint(options) {\n      let endpoint = this.endpoint(options);\n  \n      if (this.proxy) {\n        if (endpoint[0] === '/') {\n          endpoint = endpoint.substr(1);\n        }\n        return `${this.proxy.url}/${endpoint}`;\n      } else {\n        return endpoint;\n      }\n    }\n  }","import axios from \"axios\";\n\nexport default class LocalContext {\n  constructor() {\n    this.requestOptions = {\n      withCredentials: false,\n    };\n  }\n\n  get(endpoint, options) {\n    return axios.get(endpoint, this.mergeOptions(options.requestOptions));\n  }\n\n  post(endpoint, options) {\n    return axios.post(\n      endpoint,\n      options.data,\n      this.mergeOptions(options.requestOptions)\n    );\n  }\n  async put(endpoint, options) {\n    return axios.put(\n      endpoint,\n      options.data,\n      this.mergeOptions(options.requestOptions)\n    );\n  }\n\n  delete(endpoint, options) {\n    return axios.delete(endpoint, this.mergeOptions(options.requestOptions));\n  }\n\n  mergeOptions(options) {\n    return { ...this.requestOptions, ...options };\n  }\n}\n","export default class DevelopmentRequestProxy {\n  constructor(name, protocol, hostname, port) {\n    this.name = name;\n    this.protocol = protocol;\n    this.hostname = hostname;\n    this.port = port;\n  }\n\n  get url() {\n    if (!this.protocol && this.hostname) {\n      return \"/api\";\n    }\n\n    return this.port\n      ? `${this.protocol}://${this.hostname}:${this.port}/api`\n      : `${this.protocol}://${this.hostname}/api`;\n  }\n}\n","import ApiClient from \"./ApiClient\";\nimport AxiosContext from \"./AxiosContext\";\nimport RequestProxy from \"./RequestProxy\";\n\nconst config = {\n  requestConfig: {\n    context: new AxiosContext(),\n    proxy:\n      process.env[\"NODE_ENV\"] === \"production\"\n        ? new RequestProxy(\"production\", \"\", \"\")\n        : new RequestProxy(\"development\", \"http\", \"localhost\", 3001),\n  },\n};\n\nexport default new ApiClient(config);\n","import { UserRequest } from './requests';\n\nexport default class ApiClient {\n  constructor(apiConfig) {\n    const requestConfig = apiConfig.requestConfig;\n\n    this.users = new UserRequest(requestConfig);\n  }\n}","import React, { useState } from \"react\";\nimport { Layout } from \"antd\";\nimport PropTypes from \"prop-types\";\n\nimport UserAlert from \"@components/UserAlert\";\nimport UserCard from \"@components/UserCard\";\nimport UserList from \"@components/UserList\";\nimport UserMap from \"@components/UserMap\";\nimport apiClient from \"@api\";\nimport \"./Home.module.less\";\n\nconst { Content } = Layout;\n\nconst Home = (props) => {\n  const [users, setUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  const [isReady, setIsReady] = useState(false);\n\n  React.useEffect(() => {\n    props.didRender();\n    getUser(6);\n    onReady();\n  }, []);\n\n  async function getUsers() {\n    setIsLoading(true);\n    const users = await apiClient.users.getUsers();\n    setUsers(users);\n    setIsLoading(false);\n  }\n\n  async function getUser(id) {\n    setIsLoading(true);\n    const user = await apiClient.users.getUser(id);\n    setCurrentUser(user);\n    setIsLoading(false);\n  }\n\n  async function onItemClick(item) {\n    await getUser(item.id);\n    onClose();\n  }\n\n  function onReady() {\n    setTimeout(() => {\n      setIsReady(true);\n    }, 1000);\n  }\n\n  function onOpen() {\n    setIsVisible(true);\n    getUsers();\n  }\n\n  function onClose() {\n    setIsVisible(false);\n  }\n\n  return (\n    <div styleName=\"home-view\">\n      <Layout>\n        <Content>\n          {isReady && <UserMap location={currentUser.location} />}\n          {currentUser.id && <UserCard user={currentUser} />}\n        </Content>\n        <UserList\n          users={users}\n          onOpen={onOpen}\n          onClose={onClose}\n          onItemClick={onItemClick}\n          isLoading={isLoading}\n          isVisible={isVisible}\n        />\n        <UserAlert user={currentUser} />\n      </Layout>\n    </div>\n  );\n};\n\nHome.propTypes = {\n  didRender: PropTypes.func,\n};\n\nexport default Home;\n","import Page from \"@components/shared/Page\";\n\nimport HomeView from \"./Home\";\nexport const Home = Page(HomeView);\n","import React from 'react';\nimport { Home } from './views';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"antd/dist/antd.css\";\nimport \"leaflet/dist/leaflet.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}